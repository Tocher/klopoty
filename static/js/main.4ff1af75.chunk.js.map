{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["points","cords","icon","task","App","className","defaultState","center","zoom","options","preset","groupByCoordinates","map","point","index","modules","geometry","properties","balloonContent","hideIconOnBalloonOpen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAUMA,EAAkB,CACpB,CACIC,MAAO,CAAC,UAAW,WACnBC,KAAM,8BACNC,KAAM,4IAEV,CACIF,MAAO,CAAC,UAAW,WACnBC,KAAM,8BACNC,KAAM,qKAEV,CACIF,MAAO,CAAC,UAAW,WACnBC,KAAM,8BACNC,KAAM,6PAEV,CACIF,MAAO,CAAC,UAAW,WACnBC,KAAM,6BACNC,KAAM,kLAEV,CACIF,MAAO,CAAC,UAAW,WACnBC,KAAM,6BACNC,KAAM,kLAEV,CACIF,MAAO,CAAC,UAAW,WACnBC,KAAM,6BACNC,KAAM,kLAEV,CACIF,MAAO,CAAC,UAAW,WACnBC,KAAM,oCACNC,KAAM,oIAEV,CACIF,MAAO,CAAC,UAAW,WACnBC,KAAM,oCACNC,KAAM,oIAEV,CACIF,MAAO,CAAC,UAAW,WACnBC,KAAM,oCACNC,KAAM,oIAEV,CACIF,MAAO,CAAC,UAAW,WACnBC,KAAM,oCACNC,KAAM,qIAyCCC,MArCf,WACE,OACI,qCACI,qBAAKC,UAAU,MAAf,yGACA,qBAAKA,UAAU,MAAf,eACA,cAAC,IAAD,UACE,cAAC,IAAD,CACIA,UAAU,MACVC,aAAc,CAAEC,OAAQ,CAAC,UAAW,WAAYC,KAAM,IAF1D,SAII,cAAC,IAAD,CACIC,QAAS,CACLC,OAAQ,0BACRC,oBAAoB,GAH5B,SAMKX,EAAOY,KAAI,SAACC,EAAOC,GAAR,OACR,cAAC,IAAD,CACIC,QAAS,CAAC,2BAEVC,SAAUH,EAAMZ,MAChBgB,WAAY,CACRC,eAAgBL,EAAMV,MAE1BM,QAAS,CACLU,uBAAuB,EACvBT,OAAQG,EAAMX,OAPbY,gBCpElBM,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4ff1af75.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {Clusterer, Map, Placemark, PlacemarkGeometry, YMaps} from 'react-yandex-maps';\n\ninterface Point {\n    cords: PlacemarkGeometry,\n    icon: string;\n    task: string;\n}\n\nconst points: Point[] = [\n    {\n        cords: [54.431574, 27.823856],\n        icon: 'islands#orangeDogCircleIcon',\n        task: 'Отдам щенят в хорошие руки',\n    },\n    {\n        cords: [54.431574, 27.843856],\n        icon: 'islands#redGardenCircleIcon',\n        task: 'Продаю яблочки, хорошие, спелые',\n    },\n    {\n        cords: [53.731574, 27.523856],\n        icon: 'islands#redGardenCircleIcon',\n        task: 'Приезжайте собирать урожай, все собранное ваше :)',\n    },\n    {\n        cords: [53.801574, 27.723856],\n        icon: 'islands#blueBookCircleIcon',\n        task: 'Приму в дар книги сказки для детей',\n    },\n    {\n        cords: [54.011574, 27.323856],\n        icon: 'islands#blueBookCircleIcon',\n        task: 'Приму в дар книги сказки для детей',\n    },\n    {\n        cords: [54.021574, 27.823856],\n        icon: 'islands#blueBookCircleIcon',\n        task: 'Приму в дар книги сказки для детей',\n    },\n    {\n        cords: [53.831574, 27.793856],\n        icon: 'islands#nightRepairShopCircleIcon',\n        task: 'Помогите починить забор',\n    },\n    {\n        cords: [53.231574, 27.793856],\n        icon: 'islands#nightRepairShopCircleIcon',\n        task: 'Помогите починить забор',\n    },\n    {\n        cords: [53.831574, 28.193856],\n        icon: 'islands#nightRepairShopCircleIcon',\n        task: 'Помогите починить забор',\n    },\n    {\n        cords: [52.071574, 27.793856],\n        icon: 'islands#nightRepairShopCircleIcon',\n        task: 'Помогите починить забор',\n    }\n];\n\nfunction App() {\n  return (\n      <>\n          <div className=\"add\">Добавить задание</div>\n          <div className=\"faq\">?</div>\n          <YMaps>\n            <Map\n                className=\"map\"\n                defaultState={{ center: [53.931574, 27.623856], zoom: 10 }}\n            >\n                <Clusterer\n                    options={{\n                        preset: 'islands#redClusterIcons',\n                        groupByCoordinates: false,\n                    }}\n                >\n                    {points.map((point, index) => (\n                        <Placemark\n                            modules={[\"geoObject.addon.balloon\"]}\n                            key={index}\n                            geometry={point.cords}\n                            properties={{\n                                balloonContent: point.task,\n                            }}\n                            options={{\n                                hideIconOnBalloonOpen: false,\n                                preset: point.icon, // islands#COLOR + NAME + CircleIcon\n                            }}\n                        />\n                    ))}\n                </Clusterer>\n            </Map>\n          </YMaps>\n      </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}